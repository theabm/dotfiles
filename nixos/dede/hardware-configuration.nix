# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
    kernelPackages = pkgs.linuxPackages;
    # kernelPackages = pkgs.linuxPackages_xanmod_latest;
    # kernelPackages = pkgs.linuxPackages_latest;
  };

  boot.initrd = {
    availableKernelModules = ["xhci_pci" "nvme" "ahci" "usb_storage" "usbhid" "sd_mod"];
    kernelModules = ["nvidia"];
    luks.devices = {
      "luks-main".device = "/dev/disk/by-uuid/3a5bbe1f-b228-4695-8218-6f02a815cab8";
      "luks-swap".device = "/dev/disk/by-uuid/899e1d08-30b0-422d-a760-389d75acadf2";
    };
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/f954256d-7dc8-4dd9-ac99-03d2395e759e";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/3C42-634C";
      fsType = "vfat";
    };
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/92a7baae-465a-4ff7-91b4-11dfc46f0361";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
